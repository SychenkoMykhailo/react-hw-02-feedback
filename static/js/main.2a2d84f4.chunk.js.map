{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","container","Section","title","children","header","FeedbackOptions","options","onLeaveFeedback","values","Object","keys","btn","type","onClick","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","option","prop","setState","this","Component","ReactDom","render","document","querySelector"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,IAAM,+B,iBCAxBD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,0B,oBCAlED,EAAOC,QAAU,CAAC,UAAY,gC,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,gC,4JCEb,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,wCACO,+BAAOP,OAEd,2CACU,+BAAOC,OAEjB,uCACM,+BAAOC,OAEb,yCACQ,+BAAOC,OAEf,4CACW,iCAAOC,EAAP,a,oBCtBF,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKL,UAAWC,IAAOC,UAAvB,UACE,oBAAIF,UAAWC,IAAOK,OAAtB,SAA+BF,IAC9BC,K,oBCJQ,SAASE,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAG3CC,EAASC,OAAOD,OAAOF,GACvBI,EAAOD,OAAOC,KAAKJ,GACzB,OACE,gCACE,wBACER,UAAWC,IAAOY,IAClBC,KAAK,SACLC,QAAS,kBAAMN,EAAgBC,EAAO,GAAIE,EAAK,KAHjD,SAKGA,EAAK,KAER,wBACEZ,UAAWC,IAAOY,IAClBC,KAAK,SACLC,QAAS,kBAAMN,EAAgBC,EAAO,GAAIE,EAAK,KAHjD,SAKGA,EAAK,KAER,wBACEZ,UAAWC,IAAOY,IAClBC,KAAK,SACLC,QAAS,kBAAMN,EAAgBC,EAAO,GAAIE,EAAK,KAHjD,SAKGA,EAAK,Q,qBC1BC,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,qBAAKjB,UAAWC,IAAOgB,QAAvB,SAAiCA,I,ICmD3BC,E,4MAhDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,mBAAqB,qBAAGzB,KAAH,EAASC,QAAT,EAAkBC,K,EACvCwB,gCAAkC,gBAAG1B,EAAH,EAAGA,KAAH,OAChC2B,KAAKC,MAAO5B,EAAO,EAAKyB,mBAAmB,EAAKD,OAAU,M,EAE5DV,gBAAkB,SAACe,EAAQC,GACzB,EAAKC,SAAL,eACGD,EAAOD,EAAS,IAEnB,EAAKJ,mBAAmB,EAAKD,OAC7B,EAAKE,gCAAgC,EAAKF,Q,4CAG5C,WAAU,IAAD,EACwBQ,KAAKR,MAA5BxB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,sBAAKG,UAAU,gBAAf,UACE,cAACG,EAAD,CAASC,MAAM,wBAAf,SACE,cAACG,EAAD,CACEC,QAASmB,KAAKR,MACdV,gBAAiBkB,KAAKlB,oBAGzBd,EAAOE,EAAMD,EAAU,EACtB,cAACO,EAAD,CAASC,MAAM,sBAAf,SACE,cAACV,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKP,mBAAmBO,KAAKR,OACpCpB,mBAAoB4B,KAAKN,gCACvBM,KAAKR,WAKX,cAACH,EAAD,CAAcC,QAAQ,6B,GA1CdW,aCKlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.2a2d84f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1TUIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__iQpzC\",\"header\":\"Section_header__2C8N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__XrLpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__u8kpM\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div>\r\n        Good <span>{good}</span>\r\n      </div>\r\n      <div>\r\n        Neutral <span>{neutral}</span>\r\n      </div>\r\n      <div>\r\n        Bad <span>{bad}</span>\r\n      </div>\r\n      <div>\r\n        Total <span>{total}</span>\r\n      </div>\r\n      <div>\r\n        Positive <span>{positivePercentage}%</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.header}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  // Сделал так вместо обычной деструктуризации чтобы при перемене мест ентриесов стейта не\r\n  // ломалось приложение\r\n  const values = Object.values(options);\r\n  const keys = Object.keys(options);\r\n  return (\r\n    <div>\r\n      <button\r\n        className={styles.btn}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(values[0], keys[0])}\r\n      >\r\n        {keys[0]}\r\n      </button>\r\n      <button\r\n        className={styles.btn}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(values[1], keys[1])}\r\n      >\r\n        {keys[1]}\r\n      </button>\r\n      <button\r\n        className={styles.btn}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(values[2], keys[2])}\r\n      >\r\n        {keys[2]}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\nexport default function Notification({ message }) {\r\n  return <div className={styles.message}>{message}</div>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\"; // Default CSS\nimport Statistics from \"./Statistics\";\nimport Section from \"./Section\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Notification from \"./Notification\";\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = ({ good, neutral, bad }) => good + neutral + bad;\n  countPositiveFeedbackPercentage = ({ good }) =>\n    Math.floor((good / this.countTotalFeedback(this.state)) * 100);\n\n  onLeaveFeedback = (option, prop) => {\n    this.setState({\n      [prop]: option + 1,\n    });\n    this.countTotalFeedback(this.state);\n    this.countPositiveFeedbackPercentage(this.state);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"maincontainer\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        {good + bad + neutral > 0 ? (\n          <Section title=\"Feedback statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback(this.state)}\n              positivePercentage={this.countPositiveFeedbackPercentage(\n                this.state\n              )}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App\";\n//==================================================================\n\n// Компоненты Components\n// Компоненты после создания можно использовать много раз\n// Дерево похожее как в html\n// В Components смотреть структуру\n\n// ReactDom.render(<Product />, document.querySelector(\"#root\"));\nReactDom.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}